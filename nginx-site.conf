
server {
	listen 80;
	listen [::]:80;

	root /etc/nginx/conf.d/;

	index index.html index.htm index.nginx-debian.html;

	server_name pastebin.*; 

	location ~ /.git/ { access_log off; log_not_found off; deny all; }
	location ~ /(.gitignore|.gitmodules) { access_log off; log_not_found off; deny all; }
	location ~ /(build.xml|composer.json|composer.phar|generator.php|phing|README.md) { access_log off; log_not_found off; deny all; }
	location ~ /(Changelog.md|composer.lock|config.php|default_config.php|LICENSE) { access_log off; log_not_found off; deny all; }
	location ~ /\. { access_log off; log_not_found off; deny all; }
	location ~ /error.log { deny all; }

	# Directives to send expires headers and turn off 404 error logging.
	location ~* ^.+\.(ogg|ogv|svg|svgz|eot|otf|woff|mp4|ttf|rss|atom|jpg|jpeg|gif|png|ico|zip|tgz|gz|rar|bz2|doc|xls|exe|ppt|tar|mid|midi|wav|bmp|rtf)$ {
		access_log off; 
		log_not_found off; 
		expires max;
	}

	location / {
		# First attempt to serve request as file, then
		# as directory, then fall back to displaying a 404.
		try_files $uri $uri/ /pastes/$uri;
	}

	location /pastes {
		internal;
		default_type "text/plain";
	}

	# api for storing paste
	location = /api/pastes {
		default_type "text/plain";

		client_max_body_size 128k;
		client_body_buffer_size 128k;
				
		content_by_lua_block {
			ngx.req.read_body()
			
			local method = ngx.req.get_method()

			if method == "POST" then
				local args, err = ngx.req.get_post_args(1)

				if err == "truncated" then
					ngx.say("error: only one POST parameter allowed.")
					ngx.exit(403)
				end

				if not args then
					ngx.say("error: failed to get post args: ", err)
					ngx.exit(500)
				end
				
				local content = args.content

				if content == nill then
					ngx.say("error: required parameter 'content' not set")
					ngx.exit(400)
				elseif content == "" then
					ngx.say("error: required parameter 'content' is empty")
					ngx.exit(400)
				end

				math.randomseed(os.clock()+os.time())
				local random = math.random
				local function randid()
					local template ='xxxx4xxxxxxyxxxx'
					return string.gsub(template, '[xy]', function (c)
						local v = (c == 'x') and random(0, 0xf) or random(8, 0xb)
						return string.format('%x', v)
					end)
				end
				local name = randid()
				local file, err = io.open("/etc/nginx/conf.d/pastes/" .. name, "w")
				if file == nill then
					ngx.say("error: couldn't open file: ", err)
				else 
					file:write(content)
					file:close()
				end
				
				ngx.say("https://", ngx.var.host, "/", name)

			elseif method == "GET" then
				ngx.say("send a post request with 'content=your_text_content'")
			else 
				ngx.say("error: not allowed")
				ngx.exit(405)
			end
		}
	}

}